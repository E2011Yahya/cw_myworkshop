AWSTemplateFormatVersion: 2010-09-09
Description: |
  Bookstore-cfn-template aims to create a bookstore web service using Docker.
  The application code is to be deployed as a RESTful web service with Flask using Dockerfile 
  and Docker Compose on AWS Elastic Compute Cloud (EC2) Instance using AWS Cloudformation Service.

Parameters:
  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must one of the existing EC2 KeyPair
  
Resources:
  WebserverSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP access via port 80, SSH access   
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      
  WebServerHost:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0947d2ba12ee1ff75
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds: 
        - !GetAtt WebserverSecurityGroup.GroupId
      Tags: 
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName}
      UserData: 
        Fn::Base64: |
          #! /bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          systemctl start docker
          systemctl enable docker
          usermod -a -G docker ec2-user
          curl -L "https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)" \
          -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          mkdir bookstore-api
          cd bookstore-api
          wget https://raw.githubusercontent.com/E2011Yahya/cw_myworkshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/DockerCompose.yml
          wget https://raw.githubusercontent.com/E2011Yahya/cw_myworkshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/Dockerfile
          wget https://raw.githubusercontent.com/E2011Yahya/cw_myworkshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/requirements.txt
          wget https://raw.githubusercontent.com/E2011Yahya/cw_myworkshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/bookstore-api.py
          docker compose-up -d

  
Outputs:
  InstanceId:
    Description: InstanceId of the first EC2 instance
    Value: !Ref WebServerHost
  PublicDNS:
    Description: Public DNS Name of the EC2 instance
    Value: !GetAtt 
      - WebServerHost
      - PublicDnsName
    